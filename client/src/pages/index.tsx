import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import axios from 'axios'
import { useRef } from 'react'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const audioInputRef = useRef<HTMLInputElement>(null);


  const generateDeck = async () => {
    try {
      const formData = new FormData();

      // Extract audio files from the input ref
      const audioFiles = audioInputRef.current?.files;
      if (!audioFiles || audioFiles.length === 0) {
        throw new Error("No audio files selected");
      }

      // Append audio files to the FormData
      for (let i = 0; i < audioFiles.length; i++) {
        formData.append("list_audio", audioFiles[i]);
        console.log(audioFiles[i]);
      }

      // Append the other mocked data to the FormData
      formData.append(
        "list_image_url",
        "https://cdn2.fabbon.com/uploads/article/image/1037/best-layered-haircuts.jpg"
      );
      formData.append(
        "list_image_url",
        "https://m.media-amazon.com/images/G/32/social_share/amazon_logo._CB633267191_.png"
      );
      formData.append("list_sentence", "I need to cut my hair!");
      formData.append("list_sentence", "I love shopping on Amazon!");
      formData.append("list_translation", "Eu preciso cortar meu cabelo!");
      formData.append("list_translation", "Eu amo comprar na Amazon!");
      formData.append("deck_name", "deck_audio_teste14");
      formData.append("n_flashcard", "2");

      axios
      .post("https://genanki-server.onrender.com/converter", formData, {
        responseType: "arraybuffer", // for receiving the file as a binary stream
      })
      .then((response) => {
        // Create blob from received data
        const blob = new Blob([response.data], { type: "application/octet-stream" });
        const url = URL.createObjectURL(blob);
        
        // Create download link and click it to start download
        const a = document.createElement("a");
        a.href = url;
        a.download = "deck_audio_teste14.apkg";
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        
        console.log("Deck created and download initiated!");
      })
      .catch((error) => {
        console.log(`API Error: ${error}}`);
      });
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
      <label>Select audio files:</label>
      <input type="file" ref={audioInputRef} multiple accept=".ogg" />
      <button onClick={generateDeck}>Generate Anki Deck</button>
      </main>
    </>
  )
}
